# A headless service to create DNS records
apiVersion: v1
kind: Service
metadata:
  name: tf-worker
  labels:
    tf: worker
spec:
  ports:
  - port: 2222
    targetPort: 2222
  clusterIP: None
  selector:
    tf: worker
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv0001
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 5Gi
  hostPath:
    path: /data/pv0001/
---
apiVersion: apps/v1alpha1
kind: PetSet
metadata:
  name: tf-worker
spec:
  serviceName: "tf-worker"
  replicas: 1
  template:
    metadata:
      labels:
        app: tf
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
        pod.alpha.kubernetes.io/init-containers: '[
            {
                "name": "install",
                "image": "busybox",
                "imagePullPolicy": "IfNotPresent",
                "command": ["/bin/sh", "-c"],
                "args": ["export INDEX=${HOSTNAME##*-}"]
            }
        ]'
    spec:
      terminationGracePeriodSeconds: 0
      containers:
      - name: tf-worker
        image: tensorflow/tf_grpc_test_server
        args:
          - --cluster_spec=worker|tf-worker0:2222;tf-worker1:2222,ps|tf-ps0:2222"
          - --task_id=$INDEX
          - --job_name=worker
        ports:
        - containerPort: 2222
          name: tf-worker
        volumeMounts:
        - name: tf-worker-shared
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: tf-worker-shared
      annotations:
        volume.alpha.kubernetes.io/storage-class: anything
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi